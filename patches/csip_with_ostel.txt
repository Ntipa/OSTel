Index: src/com/csipsimple/wizards/impl/OSTel.java
===================================================================
--- src/com/csipsimple/wizards/impl/OSTel.java	(revision 0)
+++ src/com/csipsimple/wizards/impl/OSTel.java	(revision 0)
@@ -0,0 +1,187 @@
+/**
+ * Copyright (C) 2010-2012 Regis Montoya (aka r3gis - www.r3gis.fr)
+ * This file is part of CSipSimple.
+ *
+ *  CSipSimple is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *  If you own a pjsip commercial license you can also redistribute it
+ *  and/or modify it under the terms of the GNU Lesser General Public License
+ *  as an android library.
+ *
+ *  CSipSimple is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with CSipSimple.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+package com.csipsimple.wizards.impl;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.text.InputType;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.csipsimple.R;
+import com.csipsimple.api.SipConfigManager;
+import com.csipsimple.api.SipProfile;
+import com.csipsimple.utils.PreferencesWrapper;
+
+public class OSTel extends SimpleImplementation {
+
+
+	private static final String webCreationPage = "https://ostel.me/register";
+
+	private LinearLayout customWizard;
+	private TextView customWizardText;
+	//private WebView webView;
+	//private LinearLayout settingsContainer;
+	//private LinearLayout validationBar;
+	
+	@Override
+	protected String getDomain() {
+		return "ostel.me";
+	}
+	
+	@Override
+	protected String getDefaultName() {
+		return "OSTel";
+	}
+	
+	
+	//Customization
+	@Override
+	public void fillLayout(final SipProfile account) {
+		super.fillLayout(account);
+		accountUsername.getEditText().setInputType(InputType.TYPE_CLASS_TEXT);
+
+		//Get wizard specific row
+		customWizardText = (TextView) parent.findViewById(R.id.custom_wizard_text);
+		customWizard = (LinearLayout) parent.findViewById(R.id.custom_wizard_row);
+		
+		//validationBar = (LinearLayout) parent.findViewById(R.id.validation_bar);
+		
+		updateAccountInfos(account);
+		
+		// add webview
+		//initWebView();
+	}
+	
+
+
+//	private ProgressBar loadingProgressBar;
+	
+	@Override
+	public void setDefaultParams(PreferencesWrapper prefs) {
+		super.setDefaultParams(prefs);
+		prefs.setPreferenceStringValue(SipConfigManager.USE_ZRTP, "2");
+		prefs.setPreferenceBooleanValue(SipConfigManager.ENABLE_TLS, true);
+	}
+	
+
+	@Override
+	public boolean needRestart() {
+		return true;
+	}
+	
+	private void updateAccountInfos(final SipProfile acc) {
+		if (acc != null && acc.id != SipProfile.INVALID_ID) {
+			customWizard.setVisibility(View.GONE);
+		} else {
+			// add a row to link 
+			customWizardText.setText(R.string.create_account);
+			customWizard.setVisibility(View.VISIBLE);
+			customWizard.setOnClickListener(new OnClickListener() {
+				@Override
+				public void onClick(View v) {
+					/*
+					settingsContainer.setVisibility(View.GONE);
+					validationBar.setVisibility(View.GONE);
+					webView.setVisibility(View.VISIBLE);
+					webView.loadUrl(webCreationPage);
+					webView.requestFocus(View.FOCUS_DOWN);
+					*/
+					parent.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(webCreationPage)));
+				}
+			});
+		}
+	}
+	
+	
+	
+	public SipProfile buildAccount(SipProfile account) {
+		account = super.buildAccount(account);
+		account.transport = SipProfile.TRANSPORT_TLS;
+		
+		return account;
+	}
+	
+	
+	
+	
+	/*
+	private void initWebView() {
+
+		webView = new WebView(parent);
+		settingsContainer = (LinearLayout) parent.findViewById(R.id.settings_container);
+		LinearLayout globalContainer = (LinearLayout) settingsContainer.getParent();
+		LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT);
+		lp.weight = 1;
+		webView.setVisibility(View.GONE);
+		globalContainer.addView(webView, 0, lp);
+		
+		loadingProgressBar = new ProgressBar(parent, null, android.R.attr.progressBarStyleHorizontal);
+		lp = new LinearLayout.LayoutParams(LayoutParams.FILL_PARENT, 30);
+		lp.gravity = 1;
+		loadingProgressBar.setVisibility(View.GONE);
+		loadingProgressBar.setIndeterminate(false);
+		loadingProgressBar.setMax(100);
+		globalContainer.addView(loadingProgressBar, 0, lp);
+		
+		
+		// Setup webview 
+		webView.setScrollBarStyle(WebView.SCROLLBARS_INSIDE_OVERLAY);
+		
+		WebSettings webSettings = webView.getSettings();
+		webSettings.setSavePassword(false);
+		webSettings.setSaveFormData(false);
+		webSettings.setJavaScriptEnabled(true);
+		webSettings.setSupportZoom(false);
+		webSettings.setCacheMode(WebSettings.LOAD_NORMAL);
+		webSettings.setNeedInitialFocus(true);
+		webView.addJavascriptInterface(new JSInterface(), "CSipSimpleWizard");
+		
+		// Adds Progress bar Support
+		webView.setWebChromeClient(new WebChromeClient() {
+			public void onProgressChanged(WebView view, int progress) {
+				if(progress < 100) {
+					loadingProgressBar.setVisibility(View.VISIBLE);
+					loadingProgressBar.setProgress(progress); 
+				}else {
+					loadingProgressBar.setVisibility(View.GONE);
+				}
+			}
+		});
+	}
+
+	public class JSInterface {
+		public void finishAccountCreation(boolean success, String userName, String password) {
+			webView.setVisibility(View.GONE);
+			settingsContainer.setVisibility(View.VISIBLE);
+			validationBar.setVisibility(View.VISIBLE);
+			if(success) {
+				setUsername(userName);
+				setPassword(password);
+				parent.updateValidation();
+			}
+		}
+	}
+	*/
+}
Index: src/com/csipsimple/wizards/WizardUtils.java
===================================================================
--- src/com/csipsimple/wizards/WizardUtils.java	(revision 1339)
+++ src/com/csipsimple/wizards/WizardUtils.java	(working copy)
@@ -224,6 +224,14 @@
 	private static void initWizards() {
 		WIZARDS_DICT = new HashMap<String, WizardInfo>();
 		
+			WIZARDS_DICT.put("OSTEL", new WizardInfo("OSTEL", "OSTel", 
+					R.drawable.ic_wizard_ostel, 35, 
+					new Locale[]{  }, false, true, 
+					Tanstagi.class));
+			WIZARDS_DICT.put("TANSTAGI", new WizardInfo("TANSTAGI", "tanstagi", 
+					R.drawable.ic_wizard_tanstagi, 35, 
+					new Locale[]{  }, false, true, 
+					Tanstagi.class));
 		//Generic
 		WIZARDS_DICT.put("BASIC", new WizardInfo("BASIC", "Basic", 
 				R.drawable.ic_wizard_basic, 50, 
@@ -241,450 +249,16 @@
 				R.drawable.ic_wizard_expert, 1, 
 				new Locale[] {}, true, false, 
 				Local.class));
-		
+
+		/*		
 		if(CustomDistribution.distributionWantsOtherProviders()) {
-			//World wide
-			WIZARDS_DICT.put("EKIGA", new WizardInfo("EKIGA", "Ekiga", 
-					R.drawable.ic_wizard_ekiga, 50, 
-					new Locale[]{}, false, true, 
-					Ekiga.class));
-			WIZARDS_DICT.put("SIP2SIP", new WizardInfo("SIP2SIP", "Sip2Sip", 
-					R.drawable.ic_wizard_sip2sip, 10, 
-					new Locale[]{}, false, true, 
-					Sip2Sip.class));
-			WIZARDS_DICT.put("IPTEL", new WizardInfo("IPTEL", "IpTel", 
-					R.drawable.ic_wizard_iptel, 30, 
-					new Locale[]{}, false, true, 
-					IpTel.class));
-			WIZARDS_DICT.put("SIPSORCERY", new WizardInfo("SIPSORCERY", "SIPSorcery", 
-					R.drawable.ic_wizard_sipsorcery, 35, 
-					new Locale[]{}, false, true, 
-					SipSorcery.class));
-			WIZARDS_DICT.put("PBXES", new WizardInfo("PBXES", "Pbxes.org", 
-					R.drawable.ic_wizard_pbxes, 20, 
-					new Locale[]{}, false, true, 
-					Pbxes.class));
-			WIZARDS_DICT.put("ECS", new WizardInfo("ECS", "Alcatel-Lucent OmniPCX Office", 
-					R.drawable.ic_wizard_ale, 5, 
-					new Locale[]{}, false, true, 
-					OXO810.class));
-			WIZARDS_DICT.put("ITTELENET", new WizardInfo("ITTELENET", "ITTelenet", 
-					R.drawable.ic_wizard_ittelenet, 10, 
-					new Locale[]{}, false, true, 
-					ITTelenet.class));
-			WIZARDS_DICT.put("DELTATHREE", new WizardInfo("DELTATHREE", "deltathree", 
-					R.drawable.ic_wizard_deltathree, 35, 
-					new Locale[]{ }, false, true, 
-					DeltaThree.class));
-			WIZARDS_DICT.put("CAMUNDANET", new WizardInfo("CAMUNDANET", "CamundaNet", 
-					R.drawable.ic_wizard_camundanet, 15, 
-					new Locale[]{}, false, true, 
-					CamundaNet.class));
-			WIZARDS_DICT.put("BETAMAX", new WizardInfo("BETAMAX", "Betamax clone", 
-					R.drawable.ic_wizard_basic, 30, 
-					new Locale[]{}, false, true, 
-					Betamax.class));
-			WIZARDS_DICT.put("SIPCEL", new WizardInfo("SIPCEL", "SipCel Telecom", 
-					R.drawable.ic_wizard_sipcel, 14, 
-					new Locale[]{}, false, true, 
-					SipCel.class));
-			WIZARDS_DICT.put("LOCALPHONE", new WizardInfo("LOCALPHONE", "Localphone", 
-					R.drawable.ic_wizard_localphone, 10, 
-					new Locale[]{ }, false, true, 
-					Localphone.class));
-			WIZARDS_DICT.put("BROADSOFT", new WizardInfo("BROADSOFT", "Broadsoft", 
-					R.drawable.ic_wizard_broadsoft, 9, 
-					new Locale[]{ }, false, true, 
-					Broadsoft.class));
-			WIZARDS_DICT.put("DVCNG", new WizardInfo("DVCNG", "DVC'NG", 
-					R.drawable.ic_wizard_dvcng, 16, 
-					new Locale[]{ }, false, true, 
-					DvcNg.class));
-			WIZARDS_DICT.put("PFINGO", new WizardInfo("PFINGO", "Pfingo", 
-					R.drawable.ic_wizard_pfingo, 19, 
-					new Locale[]{ }, false, true, 
-					Pfingo.class));
-			WIZARDS_DICT.put("FASTVOIP", new WizardInfo("FASTVOIP", "FastVoip", 
-					R.drawable.ic_wizard_fastvoip, 20, 
-					new Locale[]{  }, false, true, 
-					FastVoip.class));
-			WIZARDS_DICT.put("SIPWISE", new WizardInfo("SIPWISE", "sipwise", 
-					R.drawable.ic_wizard_sipwise, 34, 
-					new Locale[]{  }, false, true, 
-					SipWise.class));
-			WIZARDS_DICT.put("VOIPMS", new WizardInfo("VOIPMS", "VoIP.ms", 
-					R.drawable.ic_wizard_voipms, 18, 
-					new Locale[]{  }, false, true, 
-					VoipMS.class));
-			WIZARDS_DICT.put("SONETEL", new WizardInfo("SONETEL", "Sonetel", 
-					R.drawable.ic_wizard_sonetel, 17, 
-					new Locale[]{  }, false, true, 
-					Sonetel.class));
-			WIZARDS_DICT.put("RAPIDVOX", new WizardInfo("RAPIDVOX", "Rapidvox", 
-					R.drawable.ic_wizard_rapidvox, 19, 
-					new Locale[]{  }, false, true, 
-					Rapidvox.class));
-			WIZARDS_DICT.put("TANSTAGI", new WizardInfo("TANSTAGI", "tanstagi", 
-					R.drawable.ic_wizard_tanstagi, 35, 
-					new Locale[]{  }, false, true, 
-					Tanstagi.class));
-            WIZARDS_DICT.put("NYMGO", new WizardInfo("NYMGO", "Nymgo", 
-                    R.drawable.ic_wizard_nymgo, 18, 
-                    new Locale[]{  }, false, true, 
-                    Nymgo.class));
-            WIZARDS_DICT.put("SIPKOM", new WizardInfo("SIPKOM", "sipkom", 
-                    R.drawable.ic_wizard_sipkom, 18, 
-                    new Locale[]{  }, false, true, 
-                    Sipkom.class));
-            WIZARDS_DICT.put("ABCVOIP", new WizardInfo("ABCVOIP", "ABC-VoIP", 
-                    R.drawable.ic_wizard_abcvoip, 18, 
-                    new Locale[]{  }, false, true, 
-                    AbcVoip.class));
-            WIZARDS_DICT.put("AMIVOX", new WizardInfo("AMIVOX", "Amivox", 
-                    R.drawable.ic_wizard_amivox, 18, 
-                    new Locale[]{  }, false, true, 
-                    Amivox.class));
-            WIZARDS_DICT.put("VOIPNOR", new WizardInfo("VOIPNOR", "VOIPNOR", 
-                    R.drawable.ic_wizard_voipnor, 9, 
-                    new Locale[]{ }, false, true, 
-                    VoipNor.class));
-            WIZARDS_DICT.put("CRYPTEL", new WizardInfo("CRYPTEL", "Cryptel Inc", 
-                    R.drawable.ic_wizard_cryptel, 9, 
-                    new Locale[]{ }, false, true, 
-                    Cryptel.class));
-            
 			
-            
-			
-			//Locales
-			WIZARDS_DICT.put("CALLCENTRIC", new WizardInfo("CALLCENTRIC", "Callcentric", 
-					R.drawable.ic_wizard_callcentric, 10, 
-					new Locale[]{Locale.US}, false, false, 
-					Callcentric.class));
-			WIZARDS_DICT.put("EUTELIA", new WizardInfo("EUTELIA", "Eutelia", 
-					R.drawable.ic_wizard_eutelia, 30, 
-					new Locale[]{Locale.ITALY}, false, false, 
-					Eutelia.class));
-			WIZARDS_DICT.put("WIMOBILE", new WizardInfo("WIMOBILE", "WiMobile", 
-					R.drawable.ic_wizard_wimobile, 20, 
-					new Locale[]{Locale.ITALY}, false, false, 
-					WiMobile.class));
-			WIZARDS_DICT.put("FREEPHONIE", new WizardInfo("FREEPHONIE", "Freephonie", 
-					R.drawable.ic_wizard_freephonie, 30, 
-					new Locale[]{Locale.FRANCE}, false, false, 
-					Freephonie.class));
-			WIZARDS_DICT.put("NEUFTALK", new WizardInfo("NEUFTALK", "NeufTalk", 
-					R.drawable.ic_wizard_neuftalk, 25, 
-					new Locale[]{Locale.FRANCE}, false, false, 
-					NeufTalk.class));
-			WIZARDS_DICT.put("IPPI", new WizardInfo("IPPI", "ippi", 
-					R.drawable.ic_wizard_ippi, 21, 
-					new Locale[]{ Locale.FRENCH, Locale.CANADA, Locale.US, }, false, false, 
-					Ippi.class));
-			WIZARDS_DICT.put("KEYYO", new WizardInfo("KEYYO", "Keyyo", 
-					R.drawable.ic_wizard_keyyo, 9, 
-					new Locale[]{Locale.FRANCE}, false, false, 
-					Keyyo.class));
-			WIZARDS_DICT.put("PHONZO", new WizardInfo("PHONZO", "Phonzo", 
-					R.drawable.ic_wizard_phonzo, 10, 
-					new Locale[]{new Locale("SE")}, false, false, 
-					Phonzo.class));
-			WIZARDS_DICT.put("PLANETPHONE", new WizardInfo("PLANETPHONE", "PlanetPhone", 
-					R.drawable.ic_wizard_planetphone, 10, 
-					new Locale[]{ locale("bg_BG") }, false, false, 
-					PlanetPhone.class));
-			WIZARDS_DICT.put("SIPGATE", new WizardInfo("SIPGATE", "Sipgate", 
-					R.drawable.ic_wizard_sipgate, 10, 
-					new Locale[]{Locale.US, Locale.UK, Locale.GERMANY}, false, false, 
-					Sipgate.class));
-			WIZARDS_DICT.put("PENNYTEL", new WizardInfo("PENNYTEL", "Pennytel", 
-					R.drawable.ic_wizard_pennytel, 10, 
-					new Locale[]{ locale("en_AU") }, false, false, 
-					Pennytel.class));
-			/*
-			WIZARDS_DICT.put("MAGICJACK", new WizardInfo("MAGICJACK", "MagicJack", 
-					R.drawable.ic_wizard_magicjack, 20, 
-					new Locale[]{ Locale.US, Locale.CANADA}, false, false, 
-					MagicJack.class));
-					*/
-			WIZARDS_DICT.put("ONSIP", new WizardInfo("ONSIP", "OnSIP", 
-					R.drawable.ic_wizard_onsip, 30, 
-					new Locale[]{ Locale.US}, false, false, 
-					OnSip.class));
-			/*
-			WIZARDS_DICT.put("GIZMO5", new WizardInfo("GIZMO5", "Gizmo5", 
-					R.drawable.ic_wizard_gizmo5, 15, 
-					new Locale[]{ Locale.US}, false, false, 
-					Gizmo5.class));
-					*/
-			WIZARDS_DICT.put("BTONE", new WizardInfo("BTONE", "BlueTone", 
-					R.drawable.ic_wizard_btone, 20, 
-					new Locale[]{ Locale.US}, false, false, 
-					BTone.class));
-			WIZARDS_DICT.put("IINET", new WizardInfo("IINET", "iinet", 
-					R.drawable.ic_wizard_iinet, 5, 
-					new Locale[]{new Locale("EN", "au")}, false, false, 
-					IiNet.class));
-			WIZARDS_DICT.put("VPHONE", new WizardInfo("VPHONE", "VTel", 
-					R.drawable.ic_wizard_vphone, 5, 
-					new Locale[]{new Locale("EN", "au")}, false, false, 
-					VPhone.class));
-			WIZARDS_DICT.put("UKRTEL", new WizardInfo("UKRTEL", "UkrTelecom", 
-					R.drawable.ic_wizard_ukrtelecom, 10, 
-					new Locale[]{new Locale("UK", "ua")}, false, false, 
-					UkrTelecom.class));
-			WIZARDS_DICT.put("IP2MOBILE", new WizardInfo("IP2MOBILE", "ip2Mobile", 
-					R.drawable.ic_wizard_ip2mobile, 10, 
-					new Locale[]{new Locale("DK", "dk")}, false, false, 
-					Ip2Mobile.class));
-			WIZARDS_DICT.put("SPEAKEZI", new WizardInfo("SPEAKEZI", "Speakezi Telecoms", 
-					R.drawable.ic_wizard_speakezi, 30, 
-					new Locale[] {new Locale("EN", "za"), new Locale("AF", "za")}, false, false, 
-					Speakezi.class));
-			WIZARDS_DICT.put("POZITEL", new WizardInfo("POZITEL", "Pozitel", 
-					R.drawable.ic_wizard_pozitel, 30, 
-					new Locale[] {new Locale("TR", "tr")}, false, false, 
-					Pozitel.class));
-			WIZARDS_DICT.put("MONDOTALK", new WizardInfo("MONDOTALK", "Mondotalk", 
-					R.drawable.ic_wizard_mondotalk, 20, 
-					new Locale[] {new Locale("EN", "au"), new Locale("EN", "us"), new Locale("EN", "nz")}, false, false, 
-					Mondotalk.class));
-			WIZARDS_DICT.put("A1", new WizardInfo("A1", "A1", 
-					R.drawable.ic_wizard_a1, 20, 
-					new Locale[] {new Locale("DE", "at")}, false, false, 
-					A1.class));
-			WIZARDS_DICT.put("SCARLET", new WizardInfo("SCARLET", "scarlet.be", 
-					R.drawable.ic_wizard_scarlet, 10, 
-					new Locale[]{
-						locale("fr_BE"), locale("nl_BE"), locale("nl_NL")
-					}, false, false, Scarlet.class));
-			WIZARDS_DICT.put("VONO", new WizardInfo("VONO", "vono", 
-					R.drawable.ic_wizard_vono, 10, 
-					new Locale[] {new Locale("PT", "br")}, false, false, 
-					Vono.class));
-			WIZARDS_DICT.put("OVH", new WizardInfo("OVH", "Ovh", 
-					R.drawable.ic_wizard_ovh, 20, 
-					new Locale[]{
-						Locale.FRANCE,	locale("fr_BE"),
-						Locale.GERMANY,
-						Locale.UK
-					}, false, false, 
-					Ovh.class));
-			WIZARDS_DICT.put("FAYN", new WizardInfo("FAYN", "Fayn", 
-					R.drawable.ic_wizard_fayn, 30, 
-					new Locale[]{
-						new Locale("CS", "cz"),
-					}, false, false, 
-					Fayn.class));
-			WIZARDS_DICT.put("VIVA", new WizardInfo("VIVA", "Viva VoIP", 
-					R.drawable.ic_wizard_viva, 30, 
-					new Locale[]{
-						new Locale("EL", "gr"),
-					}, false, false, 
-					Viva.class));
-			WIZARDS_DICT.put("SAPO", new WizardInfo("SAPO", "Sapo", 
-					R.drawable.ic_wizard_sapo, 20, 
-					new Locale[] {new Locale("PT", "pt")}, false, false, 
-					Sapo.class));
-			WIZARDS_DICT.put("BROADVOICE", new WizardInfo("BROADVOICE", "BroadVoice", 
-					R.drawable.ic_wizard_broadvoice, 19, 
-					new Locale[]{Locale.US}, false, false, 
-					BroadVoice.class));
-			WIZARDS_DICT.put("SIPTEL", new WizardInfo("SIPTEL", "Siptel", 
-					R.drawable.ic_wizard_siptel, 10, 
-					new Locale[] {new Locale("PT", "pt")}, false, false, 
-					SiptelPt.class));
-			WIZARDS_DICT.put("OPTIMUS", new WizardInfo("OPTIMUS", "Optimus", 
-					R.drawable.ic_wizard_optimus, 9, 
-					new Locale[] {new Locale("PT", "pt")}, false, false, 
-					Optimus.class));
-			WIZARDS_DICT.put("IPSHKA", new WizardInfo("IPSHKA", "IPshka", 
-					R.drawable.ic_wizard_ipshka, 10, 
-					new Locale[]{new Locale("UK", "ua")}, false, false, 
-					IPshka.class));
-			WIZARDS_DICT.put("ZADARMA", new WizardInfo("ZADARMA", "Zadarma", 
-					R.drawable.ic_wizard_zadarma, 10, 
-					new Locale[]{new Locale("UK", "ua"), locale("ru_RU"), locale("cs_CZ"), locale("ro_RO"), locale("hr_HR"), locale("bg_BG"),}, false, false, 
-					Zadarma.class));
-			WIZARDS_DICT.put("BLUEFACE", new WizardInfo("BLUEFACE", "Blueface", 
-					R.drawable.ic_wizard_blueface, 19, 
-					new Locale[]{ Locale.UK, new Locale("EN", "ie") }, false, false, 
-					Blueface.class));
-			WIZARDS_DICT.put("IPCOMMS", new WizardInfo("IPCOMMS", "IPComms", 
-					R.drawable.ic_wizard_ipcomms, 19, 
-					new Locale[]{ Locale.US, Locale.CANADA }, false, false, 
-					IPComms.class));
-			WIZARDS_DICT.put("VOIPTELIE", new WizardInfo("VOIPTELIE", "Voiptel Mobile", 
-					R.drawable.ic_wizard_voiptelie, 20, 
-					new Locale[]{ 
-					Locale.UK, Locale.CANADA, Locale.US, locale("en_IE"), locale("en_AU"),
-					locale("es_ES"), locale("es_CO") }, false, false, 
-					VoipTel.class));
-			WIZARDS_DICT.put("EASYBELL", new WizardInfo("EASYBELL", "EasyBell", 
-					R.drawable.ic_wizard_easybell, 20, 
-					new Locale[]{ Locale.GERMANY }, false, false, 
-					EasyBell.class));
-			WIZARDS_DICT.put("NETELIP", new WizardInfo("NETELIP", "NETELIP", 
-					R.drawable.ic_wizard_netelip, 5, 
-					new Locale[]{ 
-					new Locale("es"), new Locale("pt"), Locale.FRENCH, Locale.GERMAN, Locale.ENGLISH,
-					locale("bg_BG"), locale("nl_NL"), Locale.ITALY, Locale.CHINA,
-					new Locale("sv"), locale("da_DA"), locale("nb_NO"), locale("nn_NO"),
-					locale("ru_RU"), locale("tr_TR"), locale("el_GR"), locale("hu_HU"),
-					locale("cs_CZ"), locale("ro_RO"), locale("hr_HR"), locale("uk_UA"),
-					locale("ja_JP") }, false, false, 
-					Netelip.class));
-			WIZARDS_DICT.put("TELSOME", new WizardInfo("TELSOME", "Telsome", 
-					R.drawable.ic_wizard_telsome, 19, 
-					new Locale[]{
-					locale("es_ES")
-					}, false, false, 
-					Telsome.class));
-			WIZARDS_DICT.put("INNOTEL", new WizardInfo("INNOTEL", "Innotel", 
-					R.drawable.ic_wizard_innotel, 19, 
-					new Locale[]{
-					locale("hu_HU")
-					}, false, false, 
-					Innotel.class));
-			WIZARDS_DICT.put("EUROTELEFON", new WizardInfo("EUROTELEFON", "EuroTELEFON", 
-					R.drawable.ic_wizard_eurotelefon, 19, 
-					new Locale[]{
-					new Locale("pl")
-					}, false, false, 
-					EuroTelefon.class));
-			WIZARDS_DICT.put("ODORIK", new WizardInfo("ODORIK", "Odorik.cz", 
-					R.drawable.ic_wizard_odorik, 19, 
-					new Locale[]{
-					locale("cs_CZ"),new Locale("sk"), new Locale("sl"), locale("uk_UA")  
-					}, false, false, 
-					Odorik.class));
-			WIZARDS_DICT.put("FREEPHONELINECA", new WizardInfo("FREEPHONELINECA", "Freephoneline.ca", 
-					R.drawable.ic_wizard_freephonelineca, 19, 
-					new Locale[]{
-					Locale.CANADA  
-					}, false, false, 
-					FreephoneLineCa.class));
-			WIZARDS_DICT.put("SIPNET", new WizardInfo("SIPNET", "Sipnet", 
-					R.drawable.ic_wizard_sipnet, 10, 
-					new Locale[]{
-					new Locale("RU", "ru"), locale("ru_RU")
-					}, false, false, 
-					Sipnet.class));
-			WIZARDS_DICT.put("CELLIP", new WizardInfo("CELLIP", "Cellip", 
-					R.drawable.ic_wizard_cellip, 10, 
-					new Locale[]{
-					new Locale("sv")
-					}, false, false, 
-					Cellip.class));
-			WIZARDS_DICT.put("SBOHEMPEVNALINKO", new WizardInfo("SBOHEMPEVNALINKO", "sbohempevnalinko.cz", 
-					R.drawable.ic_wizard_sbohempevnalinko, 19, 
-					new Locale[]{
-					locale("cs_CZ")
-					}, false, false, 
-					Sbohempevnalinko.class));
-			WIZARDS_DICT.put("GRADWELL", new WizardInfo("GRADWELL", "Gradwell", 
-					R.drawable.ic_wizard_gradwell, 19, 
-					new Locale[]{
-					Locale.UK
-					}, false, false, 
-					Gradwell.class));
-			WIZARDS_DICT.put("BGTEL", new WizardInfo("BGTEL", "BG-Tel", 
-					R.drawable.ic_wizard_bgtel, 10, 
-					new Locale[]{ locale("bg_BG") , Locale.CANADA,
-					new Locale("EL", "gr"), Locale.US, Locale.GERMANY}, false, false, 
-					BGTel.class));
-			WIZARDS_DICT.put("BELCENTRALE", new WizardInfo("BELCENTRALE", "Belcentrale", 
-					R.drawable.ic_wizard_belcentrale, 20, 
-					new Locale[]{ locale("nl_BE"), locale("nl_NL"), locale("fr_BE") }, false, false, 
-					BelCentrale.class));
-
-			WIZARDS_DICT.put("FREECONET", new WizardInfo("FREECONET", "Freeconet", 
-					R.drawable.ic_wizard_freeconet, 19, 
-					new Locale[]{
-					new Locale("pl")
-					}, false, false, 
-					Freeconet.class));
-			WIZARDS_DICT.put("TLENOFON", new WizardInfo("TLENOFON", "Tlenofon", 
-					R.drawable.ic_wizard_tlenofon, 19, 
-					new Locale[]{
-					new Locale("pl")
-					}, false, false, 
-					Tlenofon.class));
-			WIZARDS_DICT.put("VANBERGSYSTEMS", new WizardInfo("VANBERGSYSTEMS", "Vanbergsystems", 
-					R.drawable.ic_wizard_vanbergsystems, 19, 
-					new Locale[]{
-					new Locale("pl")
-					}, false, false, 
-					Vanbergsystems.class));
-			WIZARDS_DICT.put("SMARTO", new WizardInfo("SMARTO", "Smarto", 
-					R.drawable.ic_wizard_smarto, 19, 
-					new Locale[]{
-					new Locale("pl")
-					}, false, false, 
-					Smarto.class));
-            WIZARDS_DICT.put("INTERPHONE365", new WizardInfo("INTERPHONE365", "INTERPHONE365", 
-                    R.drawable.ic_wizard_interphone365, 19, 
-                    new Locale[]{
-                    locale("es_AR"), locale("es_ES") 
-                    }, false, false, 
-                    Interphone365.class));
-            WIZARDS_DICT.put("BEEZTEL", new WizardInfo("BEEZTEL", "Beeztel", 
-                    R.drawable.ic_wizard_beeztel, 19, 
-                    new Locale[]{ new Locale("es"), new Locale("en"), new Locale("pt"), new Locale("fr") }, false, false, 
-                    Beeztel.class));
-            WIZARDS_DICT.put("COTAS", new WizardInfo("COTAS", "Cotas Line@net", 
-                    R.drawable.ic_wizard_cotas, 19, 
-                    new Locale[]{ locale("es_CO") }, false, false, 
-                    Cotas.class));
-            WIZARDS_DICT.put("BALSES", new WizardInfo("BALSES", "Balses", 
-                    R.drawable.ic_wizard_balses, 19, 
-                    new Locale[]{ locale("tr_TR") }, false, false, 
-                    Balses.class));
-            WIZARDS_DICT.put("ZONPT", new WizardInfo("ZONPT", "Zon Phone", 
-                    R.drawable.ic_wizard_zonpt, 19, 
-                    new Locale[]{ locale("pt_PT") }, false, false, 
-                    ZonPt.class));
-            WIZARDS_DICT.put("ORBTALK", new WizardInfo("ORBTALK", "Orbtalk", 
-                    R.drawable.ic_wizard_orbtalk, 19, 
-                    new Locale[]{ Locale.UK, Locale.US }, false, false, 
-                    Orbtalk.class));
-            WIZARDS_DICT.put("HALOOCENTRALA", new WizardInfo("HALOOCENTRALA", "Ha-loo centrala", 
-                    R.drawable.ic_wizard_haloo_centrala, 19, 
-                    new Locale[]{ new Locale("CS", "cz"), }, false, false, 
-                    HalooCentrala.class));
-            WIZARDS_DICT.put("HALOO", new WizardInfo("HALOO", "Ha-loo", 
-                    R.drawable.ic_wizard_haloo, 19, 
-                    new Locale[]{ new Locale("CS", "cz"), }, false, false, 
-                    Haloo.class));
-            WIZARDS_DICT.put("VOIPBEL", new WizardInfo("VOIPBEL", "VoIPBel", 
-                    R.drawable.ic_wizard_voipbel, 19, 
-                    new Locale[]{ locale("nl_BE"), locale("nl_NL"), locale("fr_BE") }, false, false, 
-                    VoipBel.class));
-            WIZARDS_DICT.put("GLOBTELECOM", new WizardInfo("GLOBTELECOM", "Globtelecom", 
-                    R.drawable.ic_wizard_globtelecom, 10, 
-                    new Locale[]{locale("ru_RU"),}, false, false, 
-                    Globtelecom.class));
-            WIZARDS_DICT.put("CONGSTARTEL", new WizardInfo("CONGSTARTEL", "Congstar Telekom", 
-                    R.drawable.ic_wizard_congstar, 10, 
-                    new Locale[]{Locale.GERMANY}, false, false, 
-                    CongstarTelekom.class));
-            WIZARDS_DICT.put("CONGSTARQSC", new WizardInfo("CONGSTARQSC", "Congstar QSC", 
-                    R.drawable.ic_wizard_congstar, 10, 
-                    new Locale[]{Locale.GERMANY}, false, false, 
-                    CongstarQSC.class));
-            WIZARDS_DICT.put("VOIPLLAMA", new WizardInfo("VOIPLLAMA", "VOIPLLAMA", 
-                    R.drawable.ic_wizard_voipllama, 10, 
-                    new Locale[]{Locale.ITALY, locale("es_ES") }, false, false, 
-                    VoipLlama.class));
-            WIZARDS_DICT.put("XNET", new WizardInfo("XNET", "XNet", 
-                    R.drawable.ic_wizard_xnet, 10, 
-                    new Locale[]{new Locale("EN", "nz") }, false, false, 
-                    XNet.class));
-			
 		}else {
 			WizardInfo info = CustomDistribution.getCustomDistributionWizard();
 			WIZARDS_DICT.put(info.id, info);
 		}
+		*/
+
 		initDone = true;
 	}
 	
